#!/usr/bin/env python
# pylint: disable=invalid-name
'''
CLI script for the Rocket R 60V.
'''

import argparse
import logging
import sys

from rocket_r60v.machine import Machine
from rocket_r60v.exceptions import RocketError

if __name__ == '__main__':

    parser    = argparse.ArgumentParser(description='Remote control the Rocket R 60V.')
    subparser = parser.add_subparsers(dest='setting', required=True)

    parser.add_argument(
        '-v', '--verbose',
        action='count',
        default=0,
        dest='verbose',
        help='verbose mode (-v for warning, -vv for info, -vvv for debug)',
    )

    parser.add_argument(
        '-f', '--logfile',
        nargs=1,
        dest='logfile',
        help='the filename of the logfile',
    )

    machine = Machine()

    for argument, setting in machine.settings.items():
        setting_parser = subparser.add_parser(argument, help=setting.__class__.__doc__.strip())

        kwargs = {'nargs': '?'}
        if hasattr(setting, 'choices'):
            kwargs['choices'] = setting.choices

        setting_parser.add_argument('value', **kwargs)

    args = parser.parse_args()

    logging_config = {
        'format': '%(asctime)s - %(module)s - [%(levelname)s]: %(message)s',
        'level': 40 - (args.verbose * 10),
        'filename': args.logfile
    }
    logging.basicConfig(**logging_config)

    try:
        machine.connect()

        if args.value:
            setattr(machine, args.setting, args.value)
        else:
            data = getattr(machine, args.setting)
            sys.stdout.write(f'{data}\n')

    except RocketError as ex:
        sys.stderr.write(f'{ex}\n')
        sys.exit(1)
